(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{377:function(i,t,e){"use strict";e.r(t);var v=e(42),a=Object(v.a)({},(function(){var i=this,t=i.$createElement,e=i._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[e("h1",{attrs:{id:"meta标签-viewport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#meta标签-viewport"}},[i._v("#")]),i._v(" meta标签--viewport")]),i._v(" "),e("h2",{attrs:{id:"引用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[i._v("#")]),i._v(" 引用")]),i._v(" "),e("p",[i._v("viewport是专为手机浏览器设计的一个meta标签，有些屏幕很小有智能手机，但分辩率却可以做得很大，比如小米４的默认分辨率为：1920*1080，比许多电脑桌面的都还大，传统桌面网站直接放到手机上阅读时，界面就会显得非常小，阅读体验就很差，就样就需要一种将原始视图在手机上放大的机制，使用viewport标签可以解决这个问题，如：\n")]),e("meta",{attrs:{name:"viewport",content:"width=device-width, initial-scale=1.0"}}),e("p"),i._v(" "),e("ol",[e("li",[e("p",[i._v("layout viewport：布局视图,layout viewport就是用于css布局的一个viewport，关于这个viewport，各家浏览器厂商会默认设置一个值，譬如 就设置了980px的默认值，所以默认的 的宽度就是980px，这也就是html的width(当然，此时若某一个子元素宽度超过这个宽度也可以强行撑大布局，但是html的宽度还是不变，其他子元素的布局还是按html的宽度进行布局，只有超出的那个特殊情况，例如在设置width=device-width，initial-scale=1时，本来应该是不会出现水平滚动条的，此时就按照屏幕完美显示，但是如果此时某一个div的宽度设为500px，那么就出现了水平滚动条，但是html还是device-width那么宽)"),e("br"),i._v("\n当不设置viewport标签时，页面在移动端的显示就相当于此时layout viewport的宽度就是默认值（eg：980px），visual viewport的宽度应该是一个比layout viewport稍大的值（应该是只有在这种情况下visual viewport的值才会比layout viewport的值大，其他情况下layout viewport的值均大于等于visual viewport的大小）")])]),i._v(" "),e("li",[e("p",[i._v("visual viewport：可视视口，visual viewport首先与手机设备有关，其次，即使是同一台设备，其visual viewport也不是一成不变的，其宽度是等于device-width/scale的，也就是说缩放值越大，visual viewport宽度就越小，因为当放大时，一个逻辑像素对应的物理像素就多了，相当于此时改变的是DPR，而一屏的物理像素是固定的，那么一屏所表示的逻辑像素就减小了，也就是visual viewport宽度变小了。对于initial-scale的设置就是对visual viewport的设置")])])]),i._v(" "),e("h2",{attrs:{id:"属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[i._v("#")]),i._v(" 属性")]),i._v(" "),e("ol",[e("li",[i._v("width：控制 layout viewport 的大小，可以指定的一个值，如 600，或者特殊的值，如 device-width， 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素），可选device-width，此宽度不依赖于原始象素(px)，而依赖于屏幕的宽度")]),i._v(" "),e("li",[i._v("initial-scale：初始缩放比例，initial-scale=1.0")]),i._v(" "),e("li",[i._v("maximum-scale：允许缩放的最大比例，maximum-scale=1.0")]),i._v(" "),e("li",[i._v("minimum-scale：允许缩放的最小比例，minimum-scale=1.0")]),i._v(" "),e("li",[i._v("user-scalable：是否允许手动缩放，user-scalable=no/yes")])]),i._v(" "),e("h2",{attrs:{id:"ppi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ppi"}},[i._v("#")]),i._v(" PPI")]),i._v(" "),e("p",[i._v("pixels per inch所表示的是每英寸所拥有的像素（pixel）数目。")]),i._v(" "),e("p",[i._v("手机屏幕的PPI当达到一定数值时，人眼就分辨不出颗粒感了。")]),i._v(" "),e("p",[i._v("这个数值是多少？按照2010年前苹果公司CEO史蒂夫·乔布斯（Steve Jobs）在iPhone 4发布会上对视网膜技术的介绍：“当你所拿的东西距离你10-12英寸（约25-30厘米）时，它的分辨率只要达到300ppi这个‘神奇数字’（每英寸300个像素点）以上，你的视网膜就无法分辨出像素点了。”(即所谓的retina视网膜屏幕。之所以叫做视网膜屏幕，是因为屏幕的PPI(屏幕像素密度)太高，人的视网膜无法分辨出屏幕上的像素点。)")]),i._v(" "),e("h2",{attrs:{id:"dpr设备像素比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dpr设备像素比"}},[i._v("#")]),i._v(" DPR设备像素比")]),i._v(" "),e("p",[i._v("DPR(devicePixelRatio)是默认缩放为100%的情况下，设备像素和CSS像素的比值")]),i._v(" "),e("ol",[e("li",[i._v("DPR = 设备像素 / CSS像素(某一方向上)")]),i._v(" "),e("li",[i._v("普通密度桌面显示屏的devicePixelRatio=1")]),i._v(" "),e("li",[i._v("高密度桌面显示屏(Mac Retina)的devicePixelRatio=2")]),i._v(" "),e("li",[i._v("主流手机显示屏的devicePixelRatio=2或3")])]),i._v(" "),e("p",[i._v("因为大部分桌面显示器的devicePixelRatio为1，所以在PC端我们感受不出来CSS Pixel 与 物理像素的差别。\n举个栗子来说，一张100x100的图片，通过CSS设置它width:100px; height:100px; 。在电脑上打开，没有什么问题，但是在手机上打开，屏幕按照逻辑分辨率来渲染，假设手机的devicePixelRatio=3，那么就相当于拿3个物理像素来描绘1个电子像素。这等于拿一个三倍的放大镜去看你的图片，你的图片可能因此变得模糊，因为细节不够。所以一般明智的做法是把图片换成300x300的，CSS宽高不变，这样在手机上展示时，CSS宽高换算成物理像素是300x300，你的图片也是300x300，就不会变糊了。")])])}),[],!1,null,null,null);t.default=a.exports}}]);